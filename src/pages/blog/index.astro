---
import Layout from '@/layouts/Layout.astro';
import PreviewImagen from '@/components/blog/PreviewImagen.astro';
import Navbar from '@/components/Navbar.astro';
import { getCollection } from 'astro:content';
import Pagination from '@/components/blog/Pagination.astro';
import { POSTS_PER_PAGE } from '@/constants';

// Get the current parameters from the URL
const currentPage: number | null = +Astro.url.searchParams.get('page')! || 1;

// Get the selected category from the URL
const selectedCategory = Astro.url.searchParams.get('category') || 'all';

// Get all the blog posts
const allBlog = await getCollection('blog');

// Get all the unique categories
const allCategories = Array.from(
  new Set(allBlog.map((post) => post.data.category))
);

// Filter the posts based on the selected category
let filteredBlogs = allBlog;

// If a category is selected, filter the posts based on the category
if (selectedCategory && selectedCategory !== 'all') {
  filteredBlogs = allBlog.filter(
    (post) => post.data.category === selectedCategory
  );
}

// Sort all the total posts filtered by date
const sortPostsByDate = filteredBlogs.sort((a, b) => {
  const dateA = a.data.pubDate;
  const dateB = b.data.pubDate;

  return dateB - dateA;
});

// Get all the posts (filtered and sorted) for the current page
const blogsForPage = sortPostsByDate.slice(
  (currentPage - 1) * POSTS_PER_PAGE,
  currentPage * POSTS_PER_PAGE
);

// Calculate the total number of pages
const totalPages: number = Math.ceil(filteredBlogs.length / POSTS_PER_PAGE);

// If the user filter by a category and the page is greater than the total pages
// redirect to the first page of the category
if (currentPage > totalPages) {
  return Astro.redirect(`/blog?page=1&category=${selectedCategory}`);
}

---

<Layout title="Blog | Raul Cano" description="Raul Cano's Blog page">
  <Navbar />
  <div class="blogs-container md:mt-10">
    <form class="mb-3" id="category-form" method="get" action="/blog">
      <input type="hidden" name="page" value={currentPage} />
      <select
        id="category-select"
        name="category"
        onchange="document.getElementById('category-form').submit()">
        <option value="all">All</option>
        {
          allCategories.map((category) => (
            <option value={category} selected={category === selectedCategory}>
              {category}
            </option>
          ))
        }
      </select>
    </form>
    {
      blogsForPage.map((post: any) => (
        <PreviewImagen
          image={post.data.image}
          summary={post.data.summary}
          category={post.data.category}
          title={post.data.title}
          pubDate={post.data.pubDate}
          slug={post.data.slug}
          author={post.data.author}
          linkAuthor={post.data.linkAuthor}
        />
      ))
    }
  </div>
  <Pagination
    currentCategory={selectedCategory}
    currentPage={currentPage > totalPages ? 1 : currentPage}
    totalPages={totalPages}
    disableNext={currentPage === totalPages}
    disablePrevious={currentPage === 1}
  />
</Layout>

<style>
  select,
  select option {
    text-transform: capitalize;
  }
</style>
