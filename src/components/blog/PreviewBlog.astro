---
import { getEntry } from 'astro:content';

interface Props {
  image: string;
  title: string;
  slug: string;
  category: string;
  pubDate: string;
  author: string;
  summary: string;
  linkAuthor: string;
}

const { title, slug, image, category, pubDate, author, linkAuthor, summary } =
  Astro.props;

const entry = await getEntry('blog', slug);

if (!slug) {
  throw new Error('No slug provided');
}

if (entry === undefined) {
  return Astro.redirect('/404');
}

// Directly use the Markdown content
const contentText = entry.body;

// Get the first 160 characters of the content
const previewText =
  summary.length > 160 ? summary.substring(0, 160) + '...' : summary;

const imagePath = `/images/${image}`;
const linkPath = `/blog/${slug}`;
const date = new Date(pubDate);

// Create a function to format the date
function formatDate(date: Date): string {
  const options: Intl.DateTimeFormatOptions = {
    weekday: 'short',
    day: '2-digit',
    month: 'short',
    year: 'numeric',
  };
  return new Intl.DateTimeFormat('en-GB', options).format(date);
}

const formattedDate = formatDate(date);
---
<article class="mb-5 pb-5 border-b border-gray-700 overflow-hidden">
  <div class="">
    <div class="flex justify-between items-center text-sm mb-2 text-customGray">
      <div class="flex gap-5">
        <time>{formattedDate}</time>
      </div>

      <span class="bg-green-500 capitalize text-black text-bold px-2 py-1"
        >{category}</span
      >
    </div>
    <h2 class="md:pr-20 text-2xl uppercase font-bold mb-2">
      <a
        href={`/blog/${slug}`}
        class="hover:underline dark:text-green-500 text-green-500">{title}</a
      >
    </h2>
    <p class="md:pr-20 text-customGray">
      {previewText}
    </p>
  </div>
</article>

<style>
  article:hover a {
    color: var(--contrast);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  article:hover img {
    transform: scale(1.05);
  }
  article:hover .read-more {
    color: var(--contrast);
    display: block;
  }
</style>
