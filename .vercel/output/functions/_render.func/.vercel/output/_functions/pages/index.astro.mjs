/* empty css                                  */
import { c as createComponent, r as renderTemplate, m as maybeRenderHead, j as renderSlot, b as createAstro, a as renderComponent, F as Fragment, d as addAttribute } from '../chunks/astro/server_C0avBOm-.mjs';
import 'kleur/colors';
import { c as content, a as $$GitHub, $ as $$Layout } from '../chunks/Layout_CGmzFhol.mjs';
import 'clsx';
import { a as getEntry, g as getCollection, $ as $$Navbar } from '../chunks/Navbar_64jSG4wF.mjs';
/* empty css                                 */
export { renderers } from '../renderers.mjs';

const $$Hero = createComponent(($$result, $$props, $$slots) => {
  const { name, label, summary, summary2 } = content.basics;
  return renderTemplate` ${maybeRenderHead()}<section class="mb-[4rem] md:mt-10"> <div class="flex flex-col justify-center items-center md:flex-row gap-5 md:gap-7"> <div class="order-2 md:order-1 flex justify-center items-center"> <div class="w-[6rem] h-[6rem] relative"> <img class="w-full h-full object-cover rounded-full transition-all hover:rotate-45" src="/round_profile.png" alt="Rounded image profile."> </div> </div> <div class="order-1 md:order-2 flex flex-col"> <div class="flex flex-col"> <h1 class="text-4xl font-bold text-center md:text-left uppercase dark:text-green-500 text-green-500"> ${name} </h1> <h2 id="label" class="text-2xl mt-3 uppercase font-bold text-center md:text-left text-white dark:text-white min-h-[2rem]"></h2> </div> </div> </div> </section> <div class="mt-0"> <p class="leading-relaxed text-customGray dark:text-customGray"> ${summary} </p> <p class="mt-4 leading-relaxed text-customGray dark:text-customGray"> ${summary2} </p> </div>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/sections/Hero.astro", void 0);

const $$Astro$1 = createAstro();
const $$Section = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Section;
  const { title = "Section Name" } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<section class="section mt-[4rem]"> <h2 class="font-bold text-3xl uppercase mb-4 dark:text-white text-white"> ${title} </h2> ${renderSlot($$result, $$slots["default"])} </section>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/Section.astro", void 0);

const $$Projects = createComponent(($$result, $$props, $$slots) => {
  const projects = content.projects;
  return renderTemplate` ${renderComponent($$result, "Section", $$Section, { "title": "Projects" }, { "default": ($$result2) => renderTemplate`${projects.map(
    ({
      url,
      description,
      highlights,
      name,
      isActive,
      github,
      img,
      youtube
    }) => {
      return renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": ($$result3) => renderTemplate` ${maybeRenderHead()}<div id="accordion-flush" data-accordion="collapse"> <p id="accordion-flush-heading"> <button type="button" class="flex items-center justify-between w-full py-5 font-medium rtl:text-right text-customGray border-b border-gray-700 dark:border-gray-700 dark:text-gray-100 gap-3" data-accordion-target="#accordion-flush-body" aria-expanded="true" aria-controls="accordion-flush-body"> <span>${name}</span> <svg data-accordion-icon class="w-3 h-3 rotate-0 transition-transform duration-300 transform active" fill="white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"></path></svg> </button> </p> <div id="accordion-flush-body" class="max-h-0 overflow-hidden transition-all duration-500 ease-out" aria-labelledby="accordion-flush-heading"> <div class="flex flex-col md:flex-row justify-between gap-4 py-5"> <div class="md:w-1/3"> <img${addAttribute(img, "src")} class="w-full aspect-video h-auto object-cover rounded-sm"> <div id="links-projects" class="flex mt-2"> ${github !== void 0 && renderTemplate`<span class="font-semibold text-sm px-2"> <a${addAttribute(github || "#", "href")} target="_blank" class="underline underline-offset-4 text-green-500 mt-4">
GitHub ↗
</a> </span>`} ${youtube !== void 0 && renderTemplate`<span class="font-semibold text-sm px-2"> <a${addAttribute(youtube || "#", "href")} target="_blank" class="underline underline-offset-4 text-green-500 mt-4">
YouTube ↗
</a> </span>`} ${url !== void 0 && renderTemplate`<span class="font-semibold text-sm px-2"> <a${addAttribute(url || "#", "href")} target="_blank" class="underline underline-offset-4 text-green-500 mt-4">
Web ↗
</a> </span>`} </div> </div> <div class="md:w-2/3 flex flex-col gap-4 justify-between pl-0 md:pl-5"> <p class="mb-2 text-customGray dark:text-customGray"> ${description} </p> <div class="mt-auto"> <div class="tags flex flex-wrap gap-2"> ${highlights.map((highlight) => {
        return renderTemplate`<span class="text-sm border border-gray-400 hover:border-gray-400 text-customGray hover:text-gray-400 dark:text-customGray px-2 transition-all cursor-default"> ${highlight} </span>`;
      })} </div> </div> </div> </div> </div> </div> ` })}`;
    }
  )}` })}`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/sections/Projects.astro", void 0);

const $$Astro = createAstro();
const $$PreviewBlogHome = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$PreviewBlogHome;
  const { title, slug, pubDate, author, linkAuthor, descriptionLength, summary } = Astro2.props;
  const entry = await getEntry("blog", slug);
  if (!slug) {
    throw new Error("No slug provided");
  }
  if (entry === void 0) {
    return Astro2.redirect("/404");
  }
  entry.body;
  const previewText = summary.length > descriptionLength ? summary.substring(0, descriptionLength) + "..." : summary;
  const date = new Date(pubDate);
  function formatDate(date2) {
    const options = {
      weekday: "short",
      day: "2-digit",
      month: "short",
      year: "numeric"
    };
    return new Intl.DateTimeFormat("en-GB", options).format(date2);
  }
  const formattedDate = formatDate(date);
  return renderTemplate`${maybeRenderHead()}<article class="flex flex-col md:flex-row mb-7 overflow-hidden hover:border-green-500" data-astro-cid-bzo4im54> <div class="md:w-full" data-astro-cid-bzo4im54> <div class="flex justify-between items-center text-sm mb-2 text-customGray" data-astro-cid-bzo4im54> <time datetime="2024-06-28" data-astro-cid-bzo4im54>${formattedDate}</time> </div> <h2 class="text-xl uppercase font-semibold mb-2" data-astro-cid-bzo4im54> <a${addAttribute(`/blog/${slug}`, "href")} class="hover:underline dark:text-green-500 text-green-500" data-astro-cid-bzo4im54> ${title} </a> </h2> <p class="text-customGray" data-astro-cid-bzo4im54>${previewText}</p> </div> </article> `;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/blog/PreviewBlogHome.astro", void 0);

const $$TopBlog = createComponent(async ($$result, $$props, $$slots) => {
  const allBlog = await getCollection("blog");
  const sortPostsByDate = allBlog.sort((a, b) => {
    const dateA = new Date(a.data.pubDate);
    const dateB = new Date(b.data.pubDate);
    return dateB.getTime() - dateA.getTime();
  });
  const lastPostByDate = sortPostsByDate.slice(0, 2);
  const lastTwoPostsByDate = sortPostsByDate.slice(2, 4);
  return renderTemplate`${renderComponent($$result, "Section", $$Section, { "title": "Blog" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<div class="flex md:gap-7 flex-wrap md:flex-nowrap"> <!-- LEFT 1 POST  --> <div class="w-full md:w-2/4 flex justify-between flex-col"> ${lastPostByDate.map((post) => renderTemplate`${renderComponent($$result2, "PreviewBlogHome", $$PreviewBlogHome, { "descriptionLength": 100, "summary": post.data.summary, "title": post.data.title, "slug": post.data.slug, "pubDate": post.data.pubDate, "author": post.data.author, "linkAuthor": post.data.linkAuthor })}`)} <!-- LEFT ANIMATION --> <!-- <div class="border border-gray-100">
				<h1 class="text-3xl">Hola</h1>
			</div> --> </div> <!-- RIGHT 2 POST  --> <div class="w-full md:w-2/4 flex justify-between flex-col"> ${lastTwoPostsByDate.map((post) => renderTemplate`${renderComponent($$result2, "PreviewBlogHome", $$PreviewBlogHome, { "descriptionLength": 100, "summary": post.data.summary, "title": post.data.title, "slug": post.data.slug, "pubDate": post.data.pubDate, "author": post.data.author, "linkAuthor": post.data.linkAuthor })}`)} </div> </div> <div class="text-right mt-4"> <a href="/blog" class="dark:text-green-500 text-green-500 underline hover:no-underline">Read more ↗</a> </div> ` })}`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/sections/TopBlog.astro", void 0);

const $$Copy = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" fill="white" viewBox="0 0 448 512" width="16px" height="16px"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--> <path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/copy.astro", void 0);

const $$Contact = createComponent(($$result, $$props, $$slots) => {
  const { name, linkedin, github, email } = content.basics;
  return renderTemplate` ${renderComponent($$result, "Section", $$Section, { "title": "Find me on the internet" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<div id="contact" class="w-full"> <!-- CONTACTS --> <div class="flex align-center"> <ul> <li> <p class="flex items-center gap-2 hover:text-green-500 hover:underline copy cursor-pointer"> <span id="emailDisplay">${email}</span> <a class="copy">${renderComponent($$result2, "Copy", $$Copy, {})}</a> </p> </li> <li> <a class="hover:text-green-500 hover:underline" target="_blank"${addAttribute(linkedin, "href")}>
LinkedIn &#8599;
</a> </li> <li> <a target="_blank" class="hover:text-green-500 hover:underline"${addAttribute(github, "href")}>GitHub &#8599;</a> </li> </ul> </div> <!-- PINPON ANIMATION --> <!-- <div class="wrapper hidden md:block">
				<div class="left_wall"></div>
				<div class="ball"></div>
				<div class="right_wall"></div>
				<div class="clear"></div>
			</div> --> </div> ` })} <!-- <style is:global>
		.wrapper {
			margin: 0 auto;
			width: 600px;
			height: 300px;
			border-bottom: 1px solid var(--text);
		}
		.clear {
			clear: both;
		}
		.left_wall {
			float: left;
			width: 2px;
			height: 100px;
			background: var(--text);
			animation: left-wall 3s infinite;
		}
		.right_wall {
			float: right;
			width: 2px;
			height: 100px;
			background: var(--text);
			animation: right-wall 3s infinite;
		}
		.ball {
			float: left;
			width: 10px;
			height: 10px;
			background: var(--text);
			border-radius: 50%;
			margin-top: 30px;
			animation: bounce_ball 3s linear infinite;
		}
		@keyframes left-wall {
			0% {
				margin-top: 0px;
			}
			25% {
				margin-top: 200px;
			}
			100% {
				margin-top: 0px;
			}
		}
		@keyframes right-wall {
			0% {
				margin-top: 200px;
			}
			50% {
				margin-top: 0px;
			}
			100% {
				margin-top: 200px;
			}
		}
		@keyframes bounce_ball {
			0% {
				margin-top: 30px;
			}
			25% {
				margin-left: 280px; /* Ball goes to the floor */
				margin-top: 292px;
			}
			50% {
				margin-left: 585px; /* Ball goes to the right wall top */
				margin-top: 30px;
			}
			75% {
				margin-left: 280px; /* Ball goes to the floor */
				margin-top: 292px;
			}
			100% {
				margin-left: 0px;
				margin-top: 30px;
			}
		}
	</style> --> `;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/sections/Contact.astro", void 0);

const $$Html = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"></path><path d="M15.5 8h-7l.5 4h6l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/html.astro", void 0);

const $$Css = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"></path><path d="M8.5 8h7l-4.5 4h4l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/css.astro", void 0);

const $$Javascript = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z"></path><path d="M7.5 8h3v8l-2 -1"></path><path d="M16.5 8h-2.5a.5 .5 0 0 0 -.5 .5v3a.5 .5 0 0 0 .5 .5h1.423a.5 .5 0 0 1 .495 .57l-.418 2.93l-2 .5"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/javascript.astro", void 0);

const $$Type = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M15 17.5c.32 .32 .754 .5 1.207 .5h.543c.69 0 1.25 -.56 1.25 -1.25v-.25a1.5 1.5 0 0 0 -1.5 -1.5a1.5 1.5 0 0 1 -1.5 -1.5v-.25c0 -.69 .56 -1.25 1.25 -1.25h.543c.453 0 .887 .18 1.207 .5"></path><path d="M9 12h4"></path><path d="M11 12v6"></path><path d="M21 19v-14a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/type.astro", void 0);

const $$React = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M6.306 8.711c-2.602 .723 -4.306 1.926 -4.306 3.289c0 2.21 4.477 4 10 4c.773 0 1.526 -.035 2.248 -.102"></path><path d="M17.692 15.289c2.603 -.722 4.308 -1.926 4.308 -3.289c0 -2.21 -4.477 -4 -10 -4c-.773 0 -1.526 .035 -2.25 .102"></path><path d="M6.305 15.287c-.676 2.615 -.485 4.693 .695 5.373c1.913 1.105 5.703 -1.877 8.464 -6.66c.387 -.67 .733 -1.339 1.036 -2"></path><path d="M17.694 8.716c.677 -2.616 .487 -4.696 -.694 -5.376c-1.913 -1.105 -5.703 1.877 -8.464 6.66c-.387 .67 -.733 1.34 -1.037 2"></path><path d="M12 5.424c-1.925 -1.892 -3.82 -2.766 -5 -2.084c-1.913 1.104 -1.226 5.877 1.536 10.66c.386 .67 .793 1.304 1.212 1.896"></path><path d="M12 18.574c1.926 1.893 3.821 2.768 5 2.086c1.913 -1.104 1.226 -5.877 -1.536 -10.66c-.375 -.65 -.78 -1.283 -1.212 -1.897"></path><path d="M11.5 12.866a1 1 0 1 0 1 -1.732a1 1 0 0 0 -1 1.732z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/react.astro", void 0);

const $$Node = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M9 9v8.044a2 2 0 0 1 -2.996 1.734l-1.568 -.9a3 3 0 0 1 -1.436 -2.561v-6.635a3 3 0 0 1 1.436 -2.56l6 -3.667a3 3 0 0 1 3.128 0l6 3.667a3 3 0 0 1 1.436 2.561v6.634a3 3 0 0 1 -1.436 2.56l-6 3.667a3 3 0 0 1 -3.128 0"></path><path d="M17 9h-3.5a1.5 1.5 0 0 0 0 3h2a1.5 1.5 0 0 1 0 3h-3.5"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/node.astro", void 0);

const $$Sql = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="16px" height="16px"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M448 80v48c0 44.2-100.3 80-224 80S0 172.2 0 128V80C0 35.8 100.3 0 224 0S448 35.8 448 80zM393.2 214.7c20.8-7.4 39.9-16.9 54.8-28.6V288c0 44.2-100.3 80-224 80S0 332.2 0 288V186.1c14.9 11.8 34 21.2 54.8 28.6C99.7 230.7 159.5 240 224 240s124.3-9.3 169.2-25.3zM0 346.1c14.9 11.8 34 21.2 54.8 28.6C99.7 390.7 159.5 400 224 400s124.3-9.3 169.2-25.3c20.8-7.4 39.9-16.9 54.8-28.6V432c0 44.2-100.3 80-224 80S0 476.2 0 432V346.1z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/sql.astro", void 0);

const $$Git = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M16 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path><path d="M12 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path><path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path><path d="M12 15v-6"></path><path d="M15 11l-2 -2"></path><path d="M11 7l-1.9 -1.9"></path><path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/git.astro", void 0);

const $$Tailwind = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M11.667 6c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 2 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968zm-4 6.5c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 1.975 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968z"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/tailwind.astro", void 0);

const $$Next = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M9 15v-6l7.745 10.65a9 9 0 1 1 2.255 -1.993"></path><path d="M15 12v-3"></path></svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/next.astro", void 0);

const $$Bootstrap = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 50 50"> <path d="M 12.138672 7 C 9.6276719 7 7.7705156 9.2570781 7.8535156 11.705078 C 7.9335156 14.056078 7.8290312 17.102938 7.0820312 19.585938 C 6.3340313 22.076937 5.068 23.651516 3 23.853516 L 3 26.146484 C 5.068 26.348484 6.3340312 27.923062 7.0820312 30.414062 C 7.8290312 32.897063 7.9325156 35.943922 7.8535156 38.294922 C 7.7705156 40.742922 9.6276719 43 12.138672 43 L 37.865234 43 C 40.376234 43 42.233391 40.742922 42.150391 38.294922 C 42.070391 35.943922 42.173922 32.897063 42.919922 30.414062 C 43.668922 27.923063 44.932 26.348484 47 26.146484 L 47 23.853516 C 44.932 23.651516 43.668922 22.076937 42.919922 19.585938 C 42.172922 17.102937 42.070391 14.056078 42.150391 11.705078 C 42.232391 9.2570781 40.374281 7 37.863281 7 L 12.138672 7 z M 12.138672 9 L 37.863281 9 C 38.596281 9 39.105344 9.3658281 39.402344 9.6738281 C 39.902344 10.190828 40.175391 10.906719 40.150391 11.636719 C 40.071391 13.966719 40.154906 17.336156 41.003906 20.160156 C 41.783906 22.756156 43.011203 24.21 44.283203 25 C 43.012203 25.79 41.784906 27.244844 41.003906 29.839844 C 40.154906 32.663844 40.071391 36.033281 40.150391 38.363281 C 40.175391 39.093281 39.902344 39.808172 39.402344 40.326172 C 39.105344 40.634172 38.596281 41 37.863281 41 L 12.138672 41 C 11.405672 41 10.898563 40.634172 10.601562 40.326172 C 10.101562 39.809172 9.8285156 39.093281 9.8535156 38.363281 C 9.9325156 36.033281 9.8470469 32.663844 8.9980469 29.839844 C 8.2180469 27.244844 6.99075 25.79 5.71875 25 C 6.99075 24.21 8.2180469 22.755156 8.9980469 20.160156 C 9.8470469 17.336156 9.9325156 13.966719 9.8535156 11.636719 C 9.8285156 10.906719 10.101562 10.190828 10.601562 9.6738281 C 10.898563 9.3658281 11.405672 9 12.138672 9 z M 17.867188 15.632812 L 17.867188 34.365234 L 25.576172 34.365234 C 27.579172 34.365234 29.242766 33.877172 30.384766 32.951172 C 31.528766 32.024172 32.132813 30.675781 32.132812 29.050781 C 32.132812 26.596781 30.388062 24.752172 27.789062 24.451172 L 27.789062 24.421875 C 29.700063 24.091875 31.191406 22.301125 31.191406 20.328125 C 31.191406 18.933125 30.655625 17.752109 29.640625 16.912109 C 28.629625 16.075109 27.209156 15.632812 25.535156 15.632812 L 17.867188 15.632812 z M 20.919922 18.083984 L 24.822266 18.083984 C 26.963266 18.083984 28.142578 19.022516 28.142578 20.728516 C 28.141578 22.559516 26.741219 23.568359 24.199219 23.568359 L 20.919922 23.568359 L 20.919922 18.083984 z M 20.919922 25.863281 L 24.794922 25.863281 C 27.594922 25.863281 29.015625 26.876094 29.015625 28.871094 C 29.015625 30.864094 27.614797 31.917969 24.966797 31.917969 L 20.919922 31.917969 L 20.919922 25.863281 z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/bootstrap.astro", void 0);

const $$Flask = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 50 50"> <path d="M 2.609375 14.628906 C 2.194125 14.663781 1.8316094 14.997641 2.3496094 15.556641 C 3.3446094 16.118641 1.3683125 16.532203 1.9453125 16.908203 C 2.1293125 17.304203 1.9305781 17.745406 1.3925781 17.816406 C 0.60457812 17.884406 0.67926562 18.960484 1.4472656 18.396484 C 2.3042656 18.124484 1.5954062 18.504031 1.1914062 18.582031 C 0.28440625 18.846031 -0.33364063 19.752078 0.19335938 20.580078 C 0.69735938 21.720078 0.83165625 22.991734 1.2226562 24.177734 C 1.8696563 26.001734 2.8149688 27.737328 4.0429688 29.236328 C 4.6259687 30.086328 5.4782969 30.690313 6.2792969 31.320312 C 7.0672969 31.831312 7.9447969 32.342516 8.8417969 32.603516 C 10.434797 33.186516 12.144359 33.241047 13.818359 33.373047 C 14.838359 33.371047 15.862141 33.299141 16.869141 33.119141 C 17.775141 33.217141 18.427094 32.442563 19.246094 32.851562 C 19.742094 32.411563 20.464938 32.603203 20.960938 32.283203 C 21.327938 31.035203 19.700547 32.035781 19.185547 31.425781 C 18.625547 32.083781 18.155562 31.353594 17.476562 31.558594 C 16.320563 31.616594 17.564156 31.040719 17.535156 30.511719 C 16.922156 30.041719 16.229891 31.157031 15.837891 31.457031 C 14.869891 31.282031 13.911437 31.006891 13.023438 30.587891 C 12.011437 30.060891 11.018156 29.433922 10.285156 28.544922 C 9.5181563 27.636922 8.6703125 26.718734 8.3203125 25.552734 C 7.5803125 23.627734 7.6284531 21.543484 7.4394531 19.521484 C 7.5094531 18.152484 8.9550781 19.668828 9.5800781 19.173828 C 9.3660781 18.463828 8.2257031 18.239078 7.5957031 17.955078 C 6.9877031 17.913078 6.7661406 17.368219 6.1191406 17.324219 C 6.1501406 16.564219 4.9303281 16.982406 4.4863281 16.441406 C 4.9233281 15.313406 3.0385469 16.468187 3.1855469 15.492188 C 3.4925469 14.857687 3.024625 14.594031 2.609375 14.628906 z M 2.6152344 14.724609 C 2.7137969 14.700016 2.8271562 14.719797 2.9414062 14.810547 C 3.4834062 15.540547 1.9445156 14.726828 2.4785156 15.423828 C 2.1537656 15.271578 2.3195469 14.798391 2.6152344 14.724609 z M 41.914062 15.085938 C 41.847063 15.085938 41.671672 15.177281 41.388672 15.363281 C 41.038672 15.589281 40.669203 15.767484 40.283203 15.896484 C 40.041203 15.979484 39.921875 16.095141 39.921875 16.244141 C 39.921875 16.347141 40.005781 16.427375 40.175781 16.484375 C 40.536781 16.603375 40.773719 16.767516 40.886719 16.978516 C 40.969719 17.143516 41.011719 17.436375 41.011719 17.859375 L 41.011719 24.615234 C 41.011719 25.207234 40.868938 25.539328 40.585938 25.611328 C 40.270937 25.693328 40.113281 25.814609 40.113281 25.974609 C 40.113281 26.041609 40.118906 26.094859 40.128906 26.130859 C 40.153906 26.233859 40.321859 26.272094 40.630859 26.246094 C 41.857859 26.148094 42.729141 26.123922 43.244141 26.169922 C 43.409141 26.185922 43.509828 26.178391 43.548828 26.150391 C 43.587828 26.122391 43.607422 26.048687 43.607422 25.929688 C 43.607422 25.779687 43.486141 25.689203 43.244141 25.658203 C 42.852141 25.617203 42.602141 25.560281 42.494141 25.488281 C 42.340141 25.385281 42.256094 25.169844 42.246094 24.839844 C 42.236094 24.509844 42.232422 24.257031 42.232422 24.082031 C 42.232422 23.835031 42.353703 23.643766 42.595703 23.509766 C 42.811703 23.354766 42.962781 23.277344 43.050781 23.277344 C 43.122781 23.277344 43.182516 23.320344 43.228516 23.402344 C 43.795516 24.361344 44.486781 25.278297 45.300781 26.154297 C 45.423781 26.283297 45.630922 26.318719 45.919922 26.261719 C 46.502922 26.215719 46.972984 26.190547 47.333984 26.185547 C 47.575984 26.175547 47.697266 26.078437 47.697266 25.898438 C 47.697266 25.754437 47.668328 25.665812 47.611328 25.632812 C 47.554328 25.599812 47.408875 25.582031 47.171875 25.582031 C 46.852875 25.582031 46.508578 25.425328 46.142578 25.111328 C 45.570578 24.612328 44.962359 23.871578 44.318359 22.892578 C 44.143359 22.619578 44.056641 22.447 44.056641 22.375 C 44.056641 22.329 44.076188 22.290766 44.117188 22.259766 C 44.673188 21.703766 45.1975 21.313797 45.6875 21.091797 C 46.0385 20.926797 46.411594 20.835313 46.808594 20.820312 C 47.061594 20.805312 47.1875 20.710156 47.1875 20.535156 C 47.1875 20.349156 47.107266 20.253047 46.947266 20.248047 C 46.458266 20.248047 45.965703 20.245234 45.470703 20.240234 C 44.759703 20.235234 44.218656 20.20825 43.847656 20.15625 C 43.682656 20.13025 43.591172 20.208672 43.576172 20.388672 C 43.566172 20.568672 43.652031 20.668453 43.832031 20.689453 C 44.249031 20.746453 44.457031 20.843422 44.457031 20.982422 C 44.457031 21.059422 44.395484 21.163969 44.271484 21.292969 C 43.647484 21.833969 43.123312 22.270469 42.695312 22.605469 C 42.535313 22.739469 42.416844 22.806641 42.339844 22.806641 C 42.267844 22.806641 42.230469 22.739469 42.230469 22.605469 L 42.216797 17.767578 C 42.216797 17.133578 42.219609 16.627953 42.224609 16.251953 C 42.229609 15.705953 42.232422 15.450328 42.232422 15.486328 C 42.232422 15.218328 42.125062 15.085938 41.914062 15.085938 z M 24.267578 15.140625 C 24.185578 15.140625 23.988688 15.231969 23.679688 15.417969 C 23.303688 15.654969 22.939844 15.830359 22.589844 15.943359 C 22.357844 16.020359 22.242188 16.137969 22.242188 16.292969 C 22.242187 16.395969 22.322422 16.47425 22.482422 16.53125 C 22.786422 16.63925 22.998141 16.792281 23.119141 16.988281 C 23.240141 17.184281 23.302734 17.491203 23.302734 17.908203 L 23.302734 24.902344 C 23.302734 25.324344 23.161859 25.579062 22.880859 25.664062 C 22.599859 25.749063 22.460938 25.852563 22.460938 25.976562 C 22.460938 26.115562 22.484203 26.201422 22.533203 26.232422 C 22.582203 26.262422 22.712828 26.267094 22.923828 26.246094 C 23.975828 26.158094 24.855406 26.149797 25.566406 26.216797 C 25.798406 26.241797 25.914062 26.151312 25.914062 25.945312 C 25.914062 25.796312 25.799406 25.708594 25.566406 25.683594 C 25.190406 25.637594 24.924531 25.542391 24.769531 25.400391 C 24.614531 25.258391 24.537109 25.030797 24.537109 24.716797 L 24.507812 17.814453 C 24.501812 17.320453 24.506484 16.816641 24.521484 16.306641 C 24.542484 15.770641 24.552734 15.512203 24.552734 15.533203 C 24.552734 15.270203 24.458578 15.140625 24.267578 15.140625 z M 13.988281 15.953125 C 13.931281 15.963125 13.891234 16.017234 13.865234 16.115234 C 13.814234 16.275234 13.891656 16.401141 14.097656 16.494141 C 14.426656 16.644141 14.652437 16.811141 14.773438 16.994141 C 14.894438 17.177141 14.955078 17.439297 14.955078 17.779297 L 14.955078 24.396484 C 14.955078 25.226484 14.702266 25.669563 14.197266 25.726562 C 13.976266 25.747563 13.865234 25.823031 13.865234 25.957031 C 13.865234 26.169031 13.975266 26.259516 14.197266 26.228516 C 14.990266 26.120516 15.99775 26.116844 17.21875 26.214844 C 17.64075 26.250844 17.867438 26.183672 17.898438 26.013672 C 17.929437 25.818672 17.818406 25.707641 17.566406 25.681641 C 17.072406 25.619641 16.750563 25.549656 16.601562 25.472656 C 16.410562 25.379656 16.314453 25.203312 16.314453 24.945312 L 16.314453 21.46875 C 16.314453 21.40275 16.360125 21.367188 16.453125 21.367188 C 17.272125 21.367187 17.865516 21.389594 18.228516 21.433594 C 18.591516 21.477594 18.840609 21.822797 18.974609 22.466797 C 19.011609 22.636797 19.100141 22.712266 19.244141 22.697266 C 19.419141 22.687266 19.505 22.616422 19.5 22.482422 C 19.448 21.359422 19.494672 20.447094 19.638672 19.746094 C 19.664672 19.622094 19.589063 19.541859 19.414062 19.505859 C 19.208063 19.459859 19.088734 19.540094 19.052734 19.746094 C 18.995734 20.123094 18.937906 20.355313 18.878906 20.445312 C 18.819906 20.535312 18.703203 20.590328 18.533203 20.611328 C 17.662203 20.668328 16.998062 20.700078 16.539062 20.705078 C 16.390062 20.710078 16.316406 20.654156 16.316406 20.535156 L 16.316406 17.033203 C 16.316406 16.914203 16.340578 16.836781 16.392578 16.800781 C 16.475578 16.743781 16.651922 16.716797 16.919922 16.716797 C 18.089922 16.716797 18.819281 16.739156 19.113281 16.785156 C 19.386281 16.821156 19.606484 16.928516 19.771484 17.103516 C 19.911484 17.252516 20.057891 17.514625 20.212891 17.890625 C 20.268891 18.029625 20.369672 18.099609 20.513672 18.099609 C 20.657672 18.099609 20.728516 18.019375 20.728516 17.859375 C 20.748516 17.045375 20.802625 16.466094 20.890625 16.121094 C 20.895625 16.100094 20.898391 16.080687 20.900391 16.054688 C 20.900391 15.977687 20.727812 15.94775 20.382812 15.96875 C 19.346812 16.03075 18.117313 16.0625 16.695312 16.0625 C 15.489312 16.0625 14.723437 16.036375 14.398438 15.984375 C 14.176438 15.948375 14.040281 15.938125 13.988281 15.953125 z M 3.7910156 16.136719 C 3.9290156 16.165969 3.9766563 16.248328 3.5976562 16.298828 L 3.4453125 16.291016 C 3.4253125 16.131516 3.6530156 16.107469 3.7910156 16.136719 z M 3.6386719 16.669922 C 3.9126719 16.789922 4.4744063 16.845484 4.5664062 17.146484 C 4.0054062 16.854484 4.6780313 17.498328 4.2070312 17.486328 C 3.9530312 17.489328 3.4826719 16.943922 3.6386719 16.669922 z M 3.4980469 17.123047 C 4.1330469 17.606047 3.1441875 17.122781 2.7421875 17.425781 C 2.1091875 17.489781 3.4360469 17.069047 3.4980469 17.123047 z M 5.1757812 17.412109 C 5.2568125 17.434484 5.2567969 17.511125 5.1230469 17.671875 C 5.6150469 18.259875 5.2334375 18.061531 4.8984375 17.644531 C 5.1924375 17.847531 4.9656719 18.724094 4.5136719 18.121094 C 4.1936719 17.525094 3.9910781 17.927937 4.3300781 18.335938 C 3.9970781 17.708938 3.033125 17.976797 2.328125 18.216797 C 1.873125 18.166797 3.5105 17.828047 3.6875 17.748047 C 3.96125 17.753297 4.9326875 17.344984 5.1757812 17.412109 z M 7.1484375 18.076172 C 7.3495469 18.073578 7.5478906 18.081156 7.7441406 18.097656 C 8.0591406 18.464656 7.5056875 19.085953 6.9296875 19.126953 C 6.2296875 19.388953 5.5171875 19.453063 4.8671875 19.539062 C 4.0331875 19.434063 3.4343125 20.184297 2.5703125 20.279297 C 2.8003125 19.853297 2.3813594 20.132328 1.9433594 20.111328 C 2.1663594 20.971328 0.40035938 19.882781 1.4433594 19.675781 C 0.66135938 19.397781 0.65042188 20.2195 0.73242188 20.6875 L 0.6796875 20.6875 C -0.0363125 19.7655 0.76001562 19.389484 1.6660156 19.271484 C 1.4940156 19.696484 1.9134062 19.833156 2.3164062 19.910156 C 2.9694063 19.730156 1.8868594 19.614359 2.3808594 19.443359 C 2.6518594 19.393359 1.5168906 19.171922 2.4628906 19.044922 C 3.4328906 18.881922 4.3055781 18.500781 5.2675781 18.300781 C 5.9185781 18.171781 6.5451094 18.083953 7.1484375 18.076172 z M 6.9335938 18.294922 C 6.8479687 18.268297 6.648875 18.321844 6.546875 18.589844 C 6.620875 18.758844 6.6575781 18.540422 6.6425781 18.482422 C 6.9920781 18.428922 7.0192188 18.321547 6.9335938 18.294922 z M 4.9160156 18.654297 C 4.6361406 18.641422 4.177625 18.701984 4.015625 18.896484 C 4.221625 18.990484 4.4481406 18.636375 4.7441406 18.859375 C 5.2966406 18.754375 5.1958906 18.667172 4.9160156 18.654297 z M 8.9121094 18.705078 C 9.052002 18.682236 9.4851562 18.843984 9.3320312 19.115234 C 9.2270312 19.145234 9.2449687 18.986937 9.1679688 18.960938 C 8.8507188 18.799312 8.8281738 18.718783 8.9121094 18.705078 z M 3.4863281 19.080078 C 3.4131875 19.08 3.3546563 19.113125 3.3476562 19.203125 L 3.4882812 19.332031 C 4.0500312 19.377781 3.70575 19.080313 3.4863281 19.080078 z M 3.171875 19.337891 C 3.0675937 19.322656 2.9709687 19.380422 2.9179688 19.576172 C 3.0159688 19.552172 3.171625 19.608688 3.265625 19.679688 C 3.858125 20.084688 3.4847187 19.383594 3.171875 19.337891 z M 6.9824219 19.433594 C 7.5024453 19.33182 7.3507187 20.677922 7.1835938 21.091797 C 7.4985937 20.876797 7.4379375 22.090969 7.3359375 22.542969 C 7.5079375 22.311969 7.5787188 22.91675 7.3867188 23.34375 C 7.4027188 23.27375 7.8028125 23.21275 7.5078125 23.71875 C 7.2828125 23.22275 7.1850781 24.727734 7.3300781 24.052734 C 7.7270781 23.414734 7.6231406 24.018781 7.7441406 24.300781 C 7.8221406 24.885781 8.0831094 25.425359 8.1621094 25.943359 C 8.5291094 26.313359 8.0058125 26.0625 8.0078125 26.5625 C 8.1268125 26.4175 8.612375 26.766156 8.609375 27.285156 C 8.649375 26.462156 8.6966563 27.092641 9.0976562 27.306641 C 9.4326562 27.846641 9.6835938 28.351875 10.183594 28.796875 C 10.573594 29.247875 10.159125 28.931031 10.328125 29.207031 C 10.742125 29.941031 11.70125 30.366594 12.53125 30.558594 C 12.89525 31.032594 13.441641 31.504062 14.181641 31.289062 C 13.555641 31.675063 15.944719 31.780047 15.136719 31.998047 C 14.716719 32.226047 14.318203 31.851094 13.908203 31.871094 C 13.338203 31.675094 12.437172 31.074422 11.826172 31.482422 C 10.981172 32.011422 12.259219 30.892578 11.574219 31.392578 C 10.880219 32.225578 11.102781 30.874297 10.425781 31.279297 C 10.386781 31.150297 9.824 31.114719 10.25 30.886719 C 9.868 30.862719 10.106141 30.838203 10.244141 30.533203 C 10.080141 30.499203 9.1685469 30.531422 8.8105469 30.232422 C 8.3885469 29.683422 8.8842188 29.906328 9.3242188 29.986328 C 8.6182188 30.110328 9.5670625 30.516016 10.039062 30.291016 C 9.8270625 30.201016 9.5844375 29.742797 9.0234375 29.341797 C 8.2394375 28.869797 7.59425 28.644578 6.78125 28.267578 C 5.90125 27.745578 6.9782031 28.082422 7.2832031 28.357422 C 8.1612031 28.744422 7.8156406 27.814266 7.3066406 27.572266 C 6.7486406 27.595266 6.6052031 26.954234 6.1582031 26.990234 C 6.8642031 27.103234 7.3543594 26.807656 6.5683594 26.097656 C 5.8213594 25.225656 6.8803125 26.755594 6.4453125 26.558594 C 6.2473125 26.297594 6.3956719 25.922109 5.7636719 25.787109 C 5.7566719 26.028109 5.6770625 26.401531 5.5390625 25.894531 C 5.3630625 25.924531 5.1615781 26.117703 5.0175781 25.595703 C 5.1535781 25.002703 4.4303594 24.867281 4.3183594 24.488281 C 4.9433594 24.887281 5.2262031 24.572719 4.7832031 24.136719 C 4.4782031 23.603719 4.435625 24.021703 4.265625 24.095703 C 3.652625 24.721703 4.2095 23.015812 3.9375 23.507812 C 3.6635 23.499813 3.8211719 23.809359 3.8261719 24.193359 C 2.9301719 23.971359 4.0437344 24.664875 4.3027344 25.046875 C 3.8937344 24.618875 3.9630938 25.367719 3.6210938 25.011719 C 3.5050937 24.696719 3.4889219 24.199328 2.9199219 24.111328 C 3.5669219 23.887328 2.5350938 23.432203 2.6210938 23.408203 C 2.9910937 23.071203 3.038375 22.608031 3.484375 23.332031 C 2.919375 23.286031 3.4684219 24.264656 3.6074219 23.972656 C 3.5854219 23.471656 3.838375 22.945844 2.984375 22.714844 C 2.733375 23.052844 2.3007344 22.052672 2.8027344 22.263672 C 2.7367344 21.599672 3.5813437 21.991125 3.5273438 21.703125 C 3.9633438 21.512125 2.9995312 20.895437 3.5195312 20.648438 C 3.9175312 20.890438 4.9498594 20.267641 4.2558594 20.181641 C 4.6898594 20.177641 5.0379844 20.367734 5.0839844 19.927734 C 5.4349844 20.003734 6.3844844 20.306078 5.5214844 19.830078 C 5.7974844 19.693078 6.3807969 19.577266 6.7167969 19.572266 C 6.8204219 19.491641 6.9081328 19.448133 6.9824219 19.433594 z M 36.621094 19.992188 C 35.957094 19.992188 35.426297 20.140453 35.029297 20.439453 C 34.601297 20.749453 34.388672 21.181281 34.388672 21.738281 C 34.388672 22.191281 34.525828 22.552312 34.798828 22.820312 C 35.050828 23.072312 35.552687 23.366172 36.304688 23.701172 C 36.824688 23.928172 37.175469 24.126875 37.355469 24.296875 C 37.520469 24.446875 37.603516 24.631516 37.603516 24.853516 C 37.603516 25.358516 37.240672 25.611328 36.513672 25.611328 C 35.652672 25.611328 35.028578 25.274609 34.642578 24.599609 C 34.554578 24.450609 34.448219 24.383437 34.324219 24.398438 C 34.200219 24.408438 34.138672 24.549266 34.138672 24.822266 C 34.138672 25.456266 34.160172 25.810813 34.201172 25.882812 C 34.268172 25.959812 34.510734 26.043719 34.927734 26.136719 C 35.411734 26.239719 35.896859 26.292969 36.380859 26.292969 C 37.107859 26.292969 37.681562 26.130594 38.101562 25.808594 C 38.521563 25.486594 38.730469 25.053812 38.730469 24.507812 C 38.730469 24.013813 38.576531 23.619266 38.269531 23.322266 C 38.032531 23.096266 37.583828 22.839641 36.923828 22.556641 C 36.294828 22.283641 35.896563 22.082125 35.726562 21.953125 C 35.535562 21.803125 35.439453 21.604563 35.439453 21.351562 C 35.439453 20.898562 35.792047 20.671875 36.498047 20.671875 C 37.122047 20.671875 37.637922 21.002969 38.044922 21.667969 C 38.101922 21.760969 38.214766 21.789906 38.384766 21.753906 C 38.543766 21.712906 38.616563 21.658797 38.601562 21.591797 C 38.472563 21.045797 38.386703 20.628844 38.345703 20.339844 C 38.329703 20.241844 38.136625 20.158797 37.765625 20.091797 C 37.420625 20.025797 37.038094 19.992188 36.621094 19.992188 z M 30.1875 20.023438 C 29.5795 20.023438 28.947109 20.197969 28.287109 20.542969 C 27.658109 20.872969 27.34375 21.161203 27.34375 21.408203 C 27.34375 21.804203 27.555516 21.982406 27.978516 21.941406 C 28.349516 21.910406 28.634031 21.695828 28.832031 21.298828 C 29.030031 20.901828 29.240891 20.703125 29.462891 20.703125 C 30.240891 20.703125 30.613031 21.127656 30.582031 21.972656 L 30.568359 22.466797 C 30.563359 22.682797 30.385156 22.825578 30.035156 22.892578 C 27.994156 23.279578 26.974609 23.917594 26.974609 24.808594 C 26.974609 25.277594 27.1285 25.648875 27.4375 25.921875 C 27.7205 26.168875 28.073094 26.292969 28.496094 26.292969 C 28.944094 26.292969 29.390984 26.187562 29.833984 25.976562 C 30.276984 25.765563 30.522359 25.658203 30.568359 25.658203 C 30.630359 25.658203 30.737578 25.757125 30.892578 25.953125 C 31.046578 26.149125 31.224781 26.246094 31.425781 26.246094 C 31.662781 26.246094 31.979047 26.136969 32.373047 25.917969 C 32.767047 25.698969 32.964844 25.535734 32.964844 25.427734 C 32.964844 25.226734 32.889281 25.126 32.738281 25.125 C 32.712281 25.125 32.620937 25.138063 32.460938 25.164062 C 32.300938 25.190062 32.193719 25.203125 32.136719 25.203125 C 31.848719 25.203125 31.705938 25.036172 31.710938 24.701172 L 31.742188 21.515625 C 31.752188 20.520625 31.2335 20.023438 30.1875 20.023438 z M 6.9257812 20.259766 C 6.7942969 20.297453 6.5887187 20.996344 6.7304688 21.246094 C 7.0424688 21.743094 7.3546563 20.024563 7.0976562 20.601562 C 6.9596562 21.336562 6.8185781 21.029422 7.0175781 20.482422 C 7.0055781 20.306672 6.9696094 20.247203 6.9257812 20.259766 z M 2.5351562 20.910156 C 2.5848594 20.907924 2.6721406 20.911906 2.8066406 20.925781 C 3.5006406 20.901781 3.2778125 21.310891 2.8828125 21.337891 C 2.8738125 21.363891 2.5209687 21.25325 2.6679688 21.15625 C 3.6199688 21.277 2.1872344 20.925783 2.5351562 20.910156 z M 4.2832031 21.152344 C 4.3410781 21.282094 4.4392344 21.526266 4.3652344 21.634766 C 4.5602344 21.827766 5.2264062 22.171219 4.6914062 21.699219 C 5.0324062 21.631219 4.6463594 21.523328 4.4433594 21.361328 C 4.2078594 21.007828 4.2253281 21.022594 4.2832031 21.152344 z M 2.0195312 21.169922 C 2.1770313 21.163797 2.3387031 21.244641 2.0332031 21.431641 C 1.7087031 21.269141 1.8620313 21.176047 2.0195312 21.169922 z M 6.4589844 21.625 C 6.448875 21.610625 6.4435781 21.623359 6.4550781 21.693359 C 6.5728281 21.957359 6.4893125 21.668125 6.4589844 21.625 z M 4.09375 21.888672 C 4.18575 22.021672 4.4347812 21.962797 4.5507812 22.091797 C 5.5987812 22.525797 4.45675 21.810672 4.09375 21.888672 z M 3.9296875 21.970703 C 3.8781301 21.982421 3.8873906 22.050922 4.0019531 22.208984 C 4.0739531 22.371984 4.2475781 22.385828 4.3925781 22.423828 C 5.5170781 22.942203 4.1531028 21.919925 3.9296875 21.970703 z M 1.9941406 22.058594 C 2.1650156 22.086469 2.3705312 22.178578 2.1445312 22.267578 L 2.0527344 22.232422 C 1.6872344 22.065922 1.8232656 22.030719 1.9941406 22.058594 z M 3.5839844 22.195312 C 3.5327813 22.197984 3.5767031 22.274828 3.8144531 22.486328 L 3.96875 22.644531 C 4.74875 22.858281 3.7375937 22.187297 3.5839844 22.195312 z M 3.4785156 22.404297 C 3.43825 22.403031 3.8000625 22.789953 3.6328125 22.783203 C 3.0538125 22.360203 3.2901875 22.659375 3.6171875 22.984375 C 3.9721875 23.511375 4.2655 22.670453 3.6875 22.564453 C 3.55 22.448953 3.4919375 22.404719 3.4785156 22.404297 z M 5.9355469 22.955078 C 5.9281875 22.979219 5.9269063 23.060781 5.9414062 23.238281 C 6.0381563 23.326031 5.957625 22.882656 5.9355469 22.955078 z M 6.4472656 23 C 6.3225312 23.00075 6.2288594 23.885063 6.5371094 24.070312 C 6.6641094 24.435312 6.7997031 24.285094 6.8457031 23.871094 C 6.5477031 23.877094 6.9683594 23.222562 6.5683594 23.351562 C 6.5333594 23.096812 6.4888438 22.99975 6.4472656 23 z M 7.3085938 23.019531 C 7.2862187 22.969906 7.2323906 23.078406 7.2128906 23.441406 L 7.2128906 23.544922 C 7.3208906 23.276422 7.3309688 23.069156 7.3085938 23.019531 z M 1.46875 23.048828 C 1.5477813 23.029797 1.99825 23.942109 1.9375 24.193359 C 1.6615 24.097359 1.674875 23.6655 1.546875 23.4375 C 1.458125 23.16525 1.4424062 23.055172 1.46875 23.048828 z M 4.7597656 23.09375 C 4.6867656 23.29675 4.9147344 23.962453 5.0527344 24.189453 C 5.4047344 24.730453 5.2468125 23.893594 5.6328125 24.433594 C 5.4208125 23.959594 5.7325 24.217625 5.6875 24.015625 C 5.5895 23.811625 4.6402656 22.731875 5.0722656 23.546875 C 5.4632656 24.518875 4.8267656 23.42475 4.7597656 23.09375 z M 1.2832031 23.251953 C 1.388877 23.320068 1.6721094 23.780859 1.7246094 24.037109 C 2.1696094 24.573109 1.9940781 24.868391 2.4550781 25.525391 C 1.8620781 25.151391 1.7500469 24.258641 1.3730469 23.681641 C 1.2189219 23.311516 1.2197988 23.211084 1.2832031 23.251953 z M 30.371094 23.373047 C 30.421969 23.376922 30.462141 23.389656 30.494141 23.410156 C 30.559141 23.451156 30.588984 23.535062 30.583984 23.664062 L 30.568359 24.933594 C 30.568359 25.093594 30.408844 25.23075 30.089844 25.34375 C 29.816844 25.44175 29.550969 25.490234 29.292969 25.490234 C 28.648969 25.490234 28.326172 25.194562 28.326172 24.601562 C 28.326172 24.013563 28.947453 23.608719 30.189453 23.386719 C 30.258953 23.373719 30.320219 23.369172 30.371094 23.373047 z M 4.5566406 24.931641 C 4.7951875 25.006508 4.6510156 25.786703 5.0097656 25.892578 C 5.8107656 26.937578 4.4549531 25.923266 4.0019531 25.822266 C 4.0599531 25.819266 3.5998281 25.691484 3.7988281 25.646484 C 3.6538281 25.497484 3.3293125 24.956359 4.0703125 25.318359 C 4.6593125 25.613359 4.7087344 25.414313 4.4277344 24.945312 C 4.4799844 24.923188 4.5225625 24.920945 4.5566406 24.931641 z M 1.8535156 25.083984 C 1.8733438 24.984234 2.2812187 25.640313 2.3554688 25.914062 C 2.5794687 26.627062 3.2805625 27.037766 3.3515625 27.509766 C 4.1285625 27.957766 3.7298125 28.688531 4.3828125 28.894531 C 4.6728125 28.747531 4.7013594 29.774547 5.3183594 29.560547 C 4.9753594 29.721547 5.4627656 29.911938 5.6347656 30.210938 C 6.0237656 30.157937 6.8763438 31.067906 6.0273438 30.753906 C 5.6693438 30.677906 5.424875 30.3055 5.171875 30.0625 C 4.420875 29.5855 3.9334844 28.787437 3.5214844 28.023438 C 2.9904844 27.220438 2.3512812 26.417516 1.9882812 25.478516 C 1.8817813 25.234766 1.8469062 25.117234 1.8535156 25.083984 z M 7.8203125 25.6875 C 7.7807266 25.707779 7.7786563 25.826438 7.8945312 26.085938 L 7.9628906 26.197266 C 8.0572656 25.890391 7.8862891 25.653701 7.8203125 25.6875 z M 5.1191406 26.605469 C 5.3401406 26.653594 5.6726406 26.772328 5.8066406 26.798828 C 5.8436406 26.957828 5.0491406 26.933141 5.7441406 27.244141 C 5.3391406 27.233141 5.2169219 27.202641 5.7949219 27.556641 C 5.5679219 27.738641 6.2525781 27.88325 6.0175781 28.15625 C 6.7145781 28.70025 5.89175 28.294266 5.59375 28.072266 C 5.41775 27.950266 4.7005 27.707828 4.8125 27.548828 C 5.6585 27.992828 5.0272969 27.529375 4.6542969 27.234375 C 5.3362969 27.401375 4.1078125 26.72925 4.7578125 26.90625 C 4.9508125 26.95325 4.4655625 26.508031 5.1015625 26.832031 C 4.7885625 26.579031 4.8981406 26.557344 5.1191406 26.605469 z M 9.3613281 28.310547 C 9.2741875 28.279797 9.3604375 28.617062 9.5546875 28.820312 C 9.9686875 29.313312 9.6537656 28.540422 9.5097656 28.482422 C 9.4397656 28.372172 9.390375 28.320797 9.3613281 28.310547 z M 5.7089844 28.794922 C 5.9394844 28.797422 6.3163281 28.901391 6.5488281 29.025391 C 7.5688281 29.252391 6.3318281 29.525891 5.9238281 29.212891 L 5.7519531 29.175781 C 5.3954531 28.892781 5.4784844 28.792422 5.7089844 28.794922 z M 6.9277344 28.902344 C 7.0125684 28.884238 7.398125 29.042813 7.5625 29.195312 C 8.0515 29.261313 8.0536719 29.484703 7.5136719 29.345703 C 7.4176719 29.286703 7.2628906 29.290016 7.2128906 29.166016 C 6.9346406 28.988266 6.876834 28.913207 6.9277344 28.902344 z M 7.578125 28.910156 C 7.732375 28.907531 7.9849531 28.951359 8.0644531 29.068359 C 9.1354531 29.240359 7.9966875 29.315203 7.6796875 29.033203 C 7.3681875 28.961703 7.423875 28.912781 7.578125 28.910156 z M 7.578125 29.513672 C 7.6939063 29.488078 8.45 29.800219 7.90625 29.730469 L 7.7480469 29.679688 C 7.5722969 29.569438 7.5395312 29.522203 7.578125 29.513672 z M 11.181641 29.695312 C 11.215391 29.707172 11.249688 29.738078 11.273438 29.798828 C 10.992188 29.794328 11.080391 29.659734 11.181641 29.695312 z M 7.5820312 29.988281 C 7.8017344 30.009516 8.6469375 30.471266 7.8984375 30.259766 L 7.7832031 30.214844 L 7.6523438 30.154297 C 7.5040938 30.022547 7.5087969 29.981203 7.5820312 29.988281 z M 9.4003906 31.205078 C 9.5019219 31.188906 10.335703 31.264563 9.6269531 31.257812 C 9.4137031 31.225313 9.3665469 31.210469 9.4003906 31.205078 z M 7.1835938 31.328125 C 7.243625 31.341541 7.3387656 31.370875 7.4785156 31.421875 C 8.3735156 31.974875 9.4053281 32.267359 10.361328 32.693359 C 11.201328 32.803359 12.087063 33.025656 12.914062 32.847656 C 13.604062 33.192656 14.319719 32.758313 15.011719 33.070312 C 13.482719 33.368312 11.909719 33.042078 10.386719 32.830078 C 9.4267187 32.709078 8.5693594 32.310641 7.6933594 31.931641 C 7.5663594 31.871641 7.4462187 31.796563 7.3242188 31.726562 C 6.7222187 31.392563 6.7968125 31.324344 7.3828125 31.652344 C 7.5898125 31.817344 9.058375 32.418484 8.359375 32.021484 C 8.095125 31.955859 6.763375 31.234213 7.1835938 31.328125 z M 12.75 31.59375 C 12.8185 31.63775 12.820859 31.781391 12.818359 31.962891 C 12.358359 32.470891 12.632656 31.75525 12.347656 32.03125 C 12.084656 32.24125 12.147063 31.906172 12.289062 31.826172 C 12.546563 31.605672 12.6815 31.54975 12.75 31.59375 z M 16.583984 31.755859 C 16.994609 31.791234 17.464328 31.886078 17.736328 31.892578 C 17.571328 32.239578 16.551516 31.920719 16.103516 32.011719 L 15.910156 32 L 15.791016 31.980469 C 15.822516 31.744469 16.173359 31.720484 16.583984 31.755859 z M 20.115234 31.867188 C 21.177234 31.866187 20.185266 32.021531 19.697266 32.019531 C 19.143266 31.889531 19.948234 31.893187 20.115234 31.867188 z M 13.71875 32.005859 C 13.80375 31.996234 13.832797 32.06325 13.591797 32.21875 L 13.503906 32.246094 C 13.491906 32.100094 13.63375 32.015484 13.71875 32.005859 z M 13.314453 32.068359 C 13.330078 32.092516 13.295156 32.161687 13.160156 32.304688 C 12.767156 32.330187 13.267578 31.995891 13.314453 32.068359 z M 9.4824219 32.177734 C 9.5783281 32.153641 10.611391 32.451578 10.744141 32.423828 C 11.797141 32.814828 10.115578 32.551031 9.7675781 32.332031 C 9.5233281 32.228781 9.4504531 32.185766 9.4824219 32.177734 z M 14.570312 32.228516 C 14.572594 32.25475 14.517781 32.316234 14.363281 32.427734 L 14.234375 32.511719 C 14.051375 32.384969 14.563469 32.149813 14.570312 32.228516 z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/flask.astro", void 0);

const $$Django = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 32 32"> <path d="M21 4H25V8H21zM25 22.754c0 1.35-.317 5.799-4.242 7.149L17 28c2.806-1.224 4-3.2 4-5.246C21 19.926 21 11 21 11l4 .002C25 11.002 25 19.715 25 22.754zM14 4v6.302c-.469-.191-1.48-.228-1.978-.228C8.273 10.074 5 12.011 5 17c0 5.969 4.504 6.997 7.65 6.997 1.242 0 4-.122 5.35-.513V4H14zM12.609 20.666C10.84 20.666 9 19.863 9 17s1.84-3.469 3.609-3.469c.432 0 .918.081 1.391.189v6.757C13.528 20.584 13.042 20.666 12.609 20.666z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/django.astro", void 0);

const $$Wordpress = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" fill="white" x="0px" y="0px" width="16" height="16" viewBox="0 0 50 50"> <path d="M25,2C12.317,2,2,12.318,2,25s10.317,23,23,23s23-10.318,23-23S37.683,2,25,2z M25,7c4.26,0,8.166,1.485,11.247,3.955 c-0.956,0.636-1.547,1.74-1.547,2.945c0,1.6,0.9,3,1.9,4.6c0.8,1.3,1.6,3,1.6,5.4c0,1.7-0.5,3.8-1.5,6.4l-2,6.6l-7.1-21.2 c1.2-0.1,2.3-0.2,2.3-0.2c1-0.1,0.9-1.6-0.1-1.6c0,0,0,0-0.1,0c0,0-3.2,0.3-5.3,0.3c-1.9,0-5.2-0.3-5.2-0.3s0,0-0.1,0 c-1,0-1.1,1.6-0.1,1.6c0,0,1,0.1,2.1,0.2l3.1,8.4L19.9,37l-7.2-21.4c1.2-0.1,2.3-0.2,2.3-0.2c1-0.1,0.9-1.6-0.1-1.6c0,0,0,0-0.1,0 c0,0-2.152,0.202-4.085,0.274C14.003,9.78,19.168,7,25,7z M7,25c0-1.8,0.271-3.535,0.762-5.174l7.424,20.256 C10.261,36.871,7,31.323,7,25z M19.678,42.2L25,26.6l5.685,15.471C28.897,42.665,26.989,43,25,43 C23.147,43,21.36,42.719,19.678,42.2z M35.304,39.75L35.304,39.75L40.6,24.4c0.786-2,1.21-3.742,1.39-5.304 C42.633,20.947,43,22.928,43,25C43,31.111,39.954,36.497,35.304,39.75z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/wordpress.astro", void 0);

const $$Python = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" fill="white" x="0px" y="0px" width="16" height="16" viewBox="0 0 50 50"> <path d="M 25 2 C 20.941406 2 18.1875 2.96875 16.4375 4.375 C 14.6875 5.78125 14 7.589844 14 9.09375 L 14 14 L 24 14 L 24 15 L 9.09375 15 C 7.265625 15 5.410156 15.792969 4.09375 17.46875 C 2.777344 19.144531 2 21.644531 2 25 C 2 28.355469 2.777344 30.855469 4.09375 32.53125 C 5.410156 34.207031 7.265625 35 9.09375 35 L 14 35 L 14 40.90625 C 14 42.410156 14.6875 44.21875 16.4375 45.625 C 18.1875 47.03125 20.941406 48 25 48 C 29.058594 48 31.8125 47.03125 33.5625 45.625 C 35.3125 44.21875 36 42.410156 36 40.90625 L 36 36 L 26 36 L 26 35 L 40.90625 35 C 42.734375 35 44.589844 34.207031 45.90625 32.53125 C 47.222656 30.855469 48 28.355469 48 25 C 48 21.644531 47.222656 19.144531 45.90625 17.46875 C 44.589844 15.792969 42.734375 15 40.90625 15 L 36 15 L 36 9.09375 C 36 7.550781 35.316406 5.738281 33.5625 4.34375 C 31.808594 2.949219 29.054688 2 25 2 Z M 25 4 C 28.746094 4 31.015625 4.875 32.3125 5.90625 C 33.609375 6.9375 34 8.136719 34 9.09375 L 34 21 C 34 22.65625 32.65625 24 31 24 L 19 24 C 16.941406 24 15.167969 25.269531 14.40625 27.0625 C 14.277344 27.359375 14.160156 27.675781 14.09375 28 C 14.027344 28.324219 14 28.65625 14 29 L 14 33 L 9.09375 33 C 7.824219 33 6.648438 32.503906 5.6875 31.28125 C 4.726563 30.058594 4 28.042969 4 25 C 4 21.957031 4.726563 19.941406 5.6875 18.71875 C 6.648438 17.496094 7.824219 17 9.09375 17 L 26 17 L 26 12 L 16 12 L 16 9.09375 C 16 8.199219 16.386719 6.980469 17.6875 5.9375 C 18.988281 4.894531 21.257813 4 25 4 Z M 20 7 C 18.898438 7 18 7.898438 18 9 C 18 10.101563 18.898438 11 20 11 C 21.101563 11 22 10.101563 22 9 C 22 7.898438 21.101563 7 20 7 Z M 36 17 L 40.90625 17 C 42.175781 17 43.351563 17.496094 44.3125 18.71875 C 45.273438 19.941406 46 21.957031 46 25 C 46 28.042969 45.273438 30.058594 44.3125 31.28125 C 43.351563 32.503906 42.175781 33 40.90625 33 L 24 33 L 24 38 L 34 38 L 34 40.90625 C 34 41.800781 33.613281 43.019531 32.3125 44.0625 C 31.011719 45.105469 28.742188 46 25 46 C 21.257813 46 18.988281 45.105469 17.6875 44.0625 C 16.386719 43.019531 16 41.800781 16 40.90625 L 16 29 C 16 28.792969 16.023438 28.601563 16.0625 28.40625 C 16.34375 27.039063 17.550781 26 19 26 L 31 26 C 33.746094 26 36 23.746094 36 21 Z M 30 39 C 28.898438 39 28 39.898438 28 41 C 28 42.101563 28.898438 43 30 43 C 31.101563 43 32 42.101563 32 41 C 32 39.898438 31.101563 39 30 39 Z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/python.astro", void 0);

const $$Sass = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 50 50"> <path d="M43.03,27.802c-1.747,0.009-3.261,0.429-4.53,1.054c-0.464-0.926-0.934-1.741-1.013-2.347 c-0.092-0.707-0.199-1.129-0.088-1.972c0.111-0.843,0.599-2.036,0.591-2.125c-0.007-0.089-0.109-0.518-1.117-0.526 c-1.008-0.007-1.87,0.194-1.972,0.46c-0.102,0.266-0.296,0.865-0.416,1.49c-0.177,0.914-2.012,4.174-3.055,5.879 c-0.341-0.666-0.631-1.252-0.691-1.716c-0.092-0.707-0.199-1.129-0.088-1.972c0.111-0.843,0.599-2.036,0.591-2.125 c-0.007-0.089-0.109-0.518-1.117-0.526c-1.008-0.007-1.87,0.194-1.972,0.46c-0.102,0.266-0.21,0.888-0.416,1.49 c-0.207,0.602-2.647,6.039-3.286,7.448c-0.326,0.718-0.609,1.295-0.809,1.689c-0.001-0.001-0.001-0.002-0.001-0.002 s-0.012,0.026-0.034,0.071c-0.171,0.335-0.273,0.521-0.273,0.521s0.001,0.003,0.003,0.007c-0.136,0.246-0.281,0.475-0.353,0.475 c-0.05,0-0.151-0.656,0.022-1.555c0.363-1.886,1.235-4.828,1.227-4.929c-0.004-0.052,0.162-0.564-0.57-0.833 c-0.711-0.26-0.965,0.174-1.03,0.175c-0.063,0.001-0.11,0.153-0.11,0.153s0.793-3.308-1.512-3.308c-1.44,0-3.436,1.576-4.42,3.004 c-0.62,0.338-1.948,1.063-3.357,1.837c-0.541,0.297-1.093,0.601-1.617,0.89c-0.036-0.039-0.071-0.079-0.108-0.118 c-2.794-2.981-7.958-5.089-7.739-9.096c0.08-1.457,0.586-5.293,9.924-9.946c7.649-3.812,13.773-2.763,14.831-0.438 c1.512,3.321-3.273,9.494-11.216,10.384c-3.027,0.339-4.62-0.834-5.017-1.271c-0.417-0.46-0.479-0.481-0.635-0.394 c-0.254,0.141-0.093,0.547,0,0.789c0.237,0.617,1.21,1.712,2.87,2.256c1.46,0.479,5.013,0.742,9.311-0.92 c4.813-1.862,8.571-7.041,7.468-11.37c-1.123-4.403-8.423-5.85-15.332-3.396c-4.112,1.461-8.563,3.754-11.764,6.747 c-3.806,3.56-4.412,6.658-4.162,7.952c0.889,4.6,7.228,7.595,9.767,9.815c-0.125,0.069-0.243,0.134-0.35,0.193 c-1.273,0.63-6.105,3.159-7.314,5.831c-1.371,3.031,0.218,5.206,1.271,5.499c3.26,0.907,6.606-0.725,8.404-3.407 c1.798-2.681,1.578-6.172,0.753-7.766c-0.01-0.02-0.022-0.039-0.032-0.059c0.329-0.195,0.664-0.392,0.996-0.587 c0.648-0.38,1.284-0.735,1.836-1.036c-0.309,0.846-0.535,1.86-0.653,3.325c-0.138,1.721,0.567,3.945,1.49,4.82 c0.406,0.385,0.895,0.394,1.205,0.394c1.074,0,1.564-0.893,2.103-1.95c0.662-1.296,1.249-2.804,1.249-2.804 s-0.737,4.075,1.271,4.075c0.731,0,1.467-0.949,1.795-1.432c0.001,0.005,0.001,0.008,0.001,0.008s0.019-0.031,0.056-0.095 c0.076-0.116,0.119-0.19,0.119-0.19s0.002-0.008,0.004-0.021c0.294-0.51,0.946-1.674,1.924-3.594 c1.263-2.48,2.475-5.586,2.475-5.586s0.113,0.76,0.482,2.015c0.217,0.739,0.679,1.556,1.043,2.339 c-0.293,0.407-0.473,0.64-0.473,0.64s0.002,0.004,0.005,0.012c-0.234,0.311-0.497,0.646-0.772,0.974 c-0.997,1.188-2.185,2.544-2.344,2.936c-0.187,0.461-0.143,0.801,0.219,1.073c0.264,0.199,0.735,0.23,1.227,0.197 c0.896-0.06,1.527-0.283,1.838-0.418c0.485-0.171,1.05-0.441,1.58-0.831c0.978-0.719,1.568-1.748,1.512-3.111 c-0.031-0.751-0.271-1.495-0.574-2.198c0.089-0.128,0.178-0.256,0.267-0.387c1.542-2.255,2.738-4.732,2.738-4.732 s0.113,0.76,0.482,2.015c0.187,0.636,0.556,1.329,0.887,2.009c-1.45,1.178-2.349,2.547-2.662,3.445 c-0.577,1.661-0.125,2.414,0.723,2.585c0.384,0.078,0.927-0.098,1.335-0.271c0.508-0.168,1.118-0.449,1.688-0.868 c0.978-0.719,1.919-1.726,1.862-3.089c-0.026-0.62-0.194-1.236-0.422-1.828c1.229-0.512,2.821-0.797,4.848-0.56 c4.349,0.508,5.202,3.223,5.039,4.359c-0.163,1.137-1.075,1.761-1.38,1.95c-0.305,0.189-0.398,0.254-0.372,0.394 c0.037,0.204,0.178,0.196,0.438,0.152c0.358-0.06,2.283-0.924,2.366-3.022C50.102,30.703,47.55,27.778,43.03,27.802z M9.512,39.102 c-1.44,1.571-3.453,2.165-4.316,1.665c-0.932-0.54-0.563-2.854,1.205-4.521c1.077-1.016,2.468-1.952,3.391-2.529 c0.21-0.126,0.518-0.312,0.893-0.537c0.062-0.035,0.097-0.055,0.097-0.055l-0.001-0.002c0.072-0.043,0.147-0.088,0.223-0.134 C11.647,35.363,11.024,37.453,9.512,39.102z M20.005,31.968c-0.502,1.223-1.552,4.352-2.191,4.184 c-0.549-0.144-0.883-2.523-0.11-4.863c0.389-1.178,1.22-2.586,1.709-3.133c0.786-0.879,1.652-1.167,1.862-0.81 C21.544,27.8,20.32,31.201,20.005,31.968z M28.675,36.105c-0.213,0.111-0.408,0.181-0.498,0.127 c-0.067-0.04,0.088-0.186,0.088-0.186s1.084-1.167,1.512-1.698c0.248-0.309,0.537-0.676,0.85-1.086 c0.003,0.041,0.004,0.082,0.004,0.122C30.627,34.782,29.277,35.725,28.675,36.105z M35.354,34.582 c-0.159-0.113-0.132-0.478,0.389-1.614c0.205-0.446,0.672-1.198,1.485-1.916c0.094,0.295,0.152,0.578,0.15,0.842 C37.367,33.653,36.112,34.31,35.354,34.582z"></path> </svg>`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/icons/sass.astro", void 0);

const $$Skills = createComponent(($$result, $$props, $$slots) => {
  const skills = content.skills;
  const SKILLS_ICONS = {
    HTML: $$Html,
    CSS: $$Css,
    JavaScript: $$Javascript,
    TypeScript: $$Type,
    React: $$React,
    Node: $$Node,
    SQL: $$Sql,
    Git: $$Git,
    GitHub: $$GitHub,
    Next: $$Next,
    Bootstrap: $$Bootstrap,
    Tailwind: $$Tailwind,
    Flask: $$Flask,
    Django: $$Django,
    Python: $$Python,
    SASS: $$Sass,
    Wordpress: $$Wordpress
  };
  return renderTemplate`${renderComponent($$result, "Section", $$Section, { "title": "Stack" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<ul class="inline-flex flex-wrap gap-2"> ${skills.map(({ name }) => {
    const iconName = name === "Next.js" ? "Next" : name;
    const Icon = SKILLS_ICONS[iconName];
    return renderTemplate`<li class="flex items-center text-customGray gap-1 border dark:border-gray-200 hover:border-gray-300 dark:text-customGray text-sm font-medium px-2 py-1 hover:text-customGray transition-all"> ${Icon && renderTemplate`${renderComponent($$result2, "Icon", Icon, { "className": "w-4 h-4 mr-1 " })}`} <span>${name}</span> </li>`;
  })} </ul> ` })}`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/components/sections/Skills.astro", void 0);

const $$Index = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate` ${renderComponent($$result, "Layout", $$Layout, { "title": "Raul Cano", "description": "Raul Cano's Blog-Portfolio" }, { "default": ($$result2) => renderTemplate`   ${maybeRenderHead()}<main> ${renderComponent($$result2, "Navbar", $$Navbar, {})} ${renderComponent($$result2, "Hero", $$Hero, {})} ${renderComponent($$result2, "TopBlog", $$TopBlog, {})} ${renderComponent($$result2, "Projects", $$Projects, {})} ${renderComponent($$result2, "Skills", $$Skills, {})} ${renderComponent($$result2, "Contact", $$Contact, {})} </main> ` })}`;
}, "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/pages/index.astro", void 0);

const $$file = "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
