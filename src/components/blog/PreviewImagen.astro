---
import { getEntry } from "astro:content";

interface Props {
	image: string;
	title: string;
	slug: string;
	category: string;
	pubDate: string;
	author: string;
	linkAuthor: string;
}

const { title, slug, image, category, pubDate, author, linkAuthor } =
	Astro.props;
const entry = await getEntry("blog", slug);

if (!slug) {
	throw new Error("No slug provided");
}

if (entry === undefined) {
	return Astro.redirect("/404");
}

// Directly use the Markdown content
const contentText = entry.body;

// Get the first 160 characters of the content
const previewText =
	contentText.length > 160
		? contentText.substring(0, 160) + "..."
		: contentText;

const imagePath = `/images/${image}`;
const linkPath = `/blogs/${slug}`;
const date = new Date(pubDate);

// Create a function to format the date
function formatDate(date: Date): string {
	const options: Intl.DateTimeFormatOptions = {
		weekday: "short",
		day: "2-digit",
		month: "short",
		year: "numeric",
	};
	return new Intl.DateTimeFormat("en-GB", options).format(date);
}

const formattedDate = formatDate(date);
---

<article
	class="flex flex-col md:flex-row border-b mb-5 border-gray-200 overflow-hidden hover:border-green-500">
	<a href={`/blogs/${slug}`} class="md:w-1/3">
		<img
			src={imagePath}
			alt="Health Tips for 2024"
			class="w-full h-full object-cover hover:bg-blend-overlay transition-all duration-300"
		/>
	</a>
	<div class="md:w-2/3 py-6 md:p-6">
		<div
			class="flex justify-between items-center text-sm mb-2 text-gray-300">
			<time datetime="2024-06-28">{formattedDate}</time>
			<span class="bg-green-500 capitalize text-black text-bold px-2 py-1"
				>{category}</span
			>
		</div>
		<h2 class="text-2xl uppercase font-bold mb-2">
			<a href={`/blogs/${slug}`} class="hover:text-green-500">{title}</a>
		</h2>
		<p class="text-gray-300">
			{previewText}
		</p>
		<div class="mt-4 text-gray-500 flex justify-between">
			<span class="font-semibold text-gray-300 text-sm"
				><a
					href={linkAuthor || "#"}
					target="_blank"
					class="hover:underline">{author}</a
				></span
			>
			<span class="read-more hidden text-sm">&#9679;</span>
		</div>
	</div>
</article>

<style>
	article:hover a {
		color: var(--contrast);
		transition-property: all;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}
	article:hover img {
		transform: scale(1.05);
	}

	article:hover .read-more {
		color: var(--contrast);
		display: block;
	}
</style>
