import { m as createComponent, n as renderTemplate, o as maybeRenderHead, y as unescapeHTML } from './astro/server_Cmaf0c94.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<p>WordPress allows you to create new meta_keys for your posts. This is useful when\r\nyou want to store additional information about your posts.</p>\n<p>By the other hand the <a href=\"https://developer.wordpress.org/plugins/cron/scheduling-wp-cron-events/\">WordPress CRON event</a> allows you to schedule events to run at specific times. In this case, we will use it to reset the daily views counter every day, store the daily views in a weekly array, and calculate the total weekly views.</p>\n<hr>\n<h2 id=\"1-add-a-new-custom-field-to-store-daily-views\">1. Add a New Custom Field to Store Daily Views</h2>\n<p>We can add a new custom field in different ways. Without code by using the plugin ACF (Advanced Custom Fields) or with code. In this case, we will use code.</p>\n<p>To add a new custom field, WordPress provides the <a href=\"https://developer.wordpress.org/reference/functions/add_post_meta/\">add_post_meta()</a> and <a href=\"https://developer.wordpress.org/reference/functions/update_post_meta/\">update_post_meta()</a> functions. It’s not necessary to use the first one because update_post_meta() will add the custom field if it doesn’t exist.</p>\n<h3 id=\"code-for-singlephp\">Code for <code>single.php</code></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"><span style=\"color:#F97583\">&#x3C;?</span><span style=\"color:#79B8FF\">php</span><span style=\"color:#F97583\"> while</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) </span><span style=\"color:#F97583\">:</span><span style=\"color:#B392F0\"> the_post</span><span style=\"color:#E1E4E8\">(); </span><span style=\"color:#F97583\">?></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  &#x3C;?</span><span style=\"color:#79B8FF\">php</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">  // Get the post ID and increment the daily views counter</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  $post_id </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> get_the_ID</span><span style=\"color:#E1E4E8\">(); </span><span style=\"color:#6A737D\">// Get the post ID from the loop </span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  $daily_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> get_post_meta</span><span style=\"color:#E1E4E8\">($post_id, </span><span style=\"color:#9ECBFF\">'daily_views'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">true</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  $daily_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> $daily_views </span><span style=\"color:#F97583\">?</span><span style=\"color:#E1E4E8\"> $daily_views </span><span style=\"color:#F97583\">+</span><span style=\"color:#79B8FF\"> 1</span><span style=\"color:#F97583\"> :</span><span style=\"color:#79B8FF\"> 1</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">  update_post_meta</span><span style=\"color:#E1E4E8\">($post_id, </span><span style=\"color:#9ECBFF\">'daily_views'</span><span style=\"color:#E1E4E8\">, $daily_views);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  ?></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  ...</span><span style=\"color:#79B8FF\">Your</span><span style=\"color:#79B8FF\"> post</span><span style=\"color:#79B8FF\"> content</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">&#x3C;?</span><span style=\"color:#79B8FF\">php</span><span style=\"color:#F97583\"> endwhile</span><span style=\"color:#E1E4E8\">; </span><span style=\"color:#F97583\">?></span></span>\n<span class=\"line\"></span></code></pre>\n<p>By doing so, we can see in the database that the custom field <code>daily_views</code> has been added to the post. Inside the postmeta table</p>\n<h2 id=\"2-create-cron-event-to-reset-the-daily-views-counter-every-day\">2. Create CRON event to reset the daily views counter every day</h2>\n<p>To reset the daily views counter every day, we can use the WordPress CRON event. We will create a new function in <code>functions.php</code> to reset the daily views counter for all posts.</p>\n<h3 id=\"code-for-functionsphp\">Code for <code>functions.php</code></h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> reset_daily_views</span><span style=\"color:#E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$args </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_type'</span><span style=\"color:#F97583\">      =></span><span style=\"color:#9ECBFF\"> 'post'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'posts_per_page'</span><span style=\"color:#F97583\"> =></span><span style=\"color:#F97583\"> -</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_status'</span><span style=\"color:#F97583\">    =></span><span style=\"color:#9ECBFF\"> 'publish'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$posts </span><span style=\"color:#F97583\">=</span><span style=\"color:#F97583\"> new</span><span style=\"color:#79B8FF\"> WP_Query</span><span style=\"color:#E1E4E8\">($args);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\tif</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\twhile</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">the_post</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\t\t\tdelete_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'daily_views'</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Delete the daily views counter</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_reset_postdata</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">if</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#F97583\">!</span><span style=\"color:#B392F0\">wp_next_scheduled</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'reset_daily_views_hook'</span><span style=\"color:#E1E4E8\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_schedule_event</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">time</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'daily'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'reset_daily_views_hook'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">add_action</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'reset_daily_views_hook'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'reset_daily_views'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"3-add-a-new-custom-field-to-store-weekly-views-with-a-cron-event\">3. Add a New Custom Field to Store Weekly Views With a CRON Event</h2>\n<p>We will create a new function in <code>functions.php</code> to store the daily views in a weekly array. This function will be executed every day to store the daily views in the <code>weekly_views</code> custom field.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> add_day_to_week</span><span style=\"color:#E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$args </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_type'</span><span style=\"color:#F97583\">      =></span><span style=\"color:#9ECBFF\"> 'post'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'posts_per_page'</span><span style=\"color:#F97583\"> =></span><span style=\"color:#F97583\"> -</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_status'</span><span style=\"color:#F97583\">    =></span><span style=\"color:#9ECBFF\"> 'publish'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$posts </span><span style=\"color:#F97583\">=</span><span style=\"color:#F97583\"> new</span><span style=\"color:#79B8FF\"> WP_Query</span><span style=\"color:#E1E4E8\">($args);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\tif</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\twhile</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">the_post</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$daily_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> get_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'daily_views'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">true</span><span style=\"color:#E1E4E8\">);  </span><span style=\"color:#6A737D\">// Comes from single.php</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$weekly_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> get_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'weekly_views'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">true</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\t\tif</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#F97583\">!</span><span style=\"color:#79B8FF\">is_array</span><span style=\"color:#E1E4E8\">($weekly_views)) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t\t$weekly_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\t\tif</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#79B8FF\">count</span><span style=\"color:#E1E4E8\">($weekly_views) </span><span style=\"color:#F97583\">>=</span><span style=\"color:#79B8FF\"> 7</span><span style=\"color:#E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">\t\t\t\tarray_shift</span><span style=\"color:#E1E4E8\">($weekly_views);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$weekly_views[] </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> $daily_views;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\t\t\tupdate_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'weekly_views'</span><span style=\"color:#E1E4E8\">, $weekly_views);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_reset_postdata</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">if</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#F97583\">!</span><span style=\"color:#B392F0\">wp_next_scheduled</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'add_day_to_week_hook'</span><span style=\"color:#E1E4E8\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_schedule_event</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">time</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'daily'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'add_day_to_week_hook'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">add_action</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'add_day_to_week_hook'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'add_day_to_week'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"4-add-a-new-custom-field-to-store-the-total-views-during-the-week\">4. Add a New Custom Field to Store The Total Views During The Week</h2>\n<p>This is a simple sum of the <code>weekly_views</code> array. We will create a new function in <code>functions.php</code> to store the total weekly views for all posts.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> total_weekly_views</span><span style=\"color:#E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$args </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_type'</span><span style=\"color:#F97583\">      =></span><span style=\"color:#9ECBFF\"> 'post'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'posts_per_page'</span><span style=\"color:#F97583\"> =></span><span style=\"color:#F97583\"> -</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">\t\t'post_status'</span><span style=\"color:#F97583\">    =></span><span style=\"color:#9ECBFF\"> 'publish'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t$posts </span><span style=\"color:#F97583\">=</span><span style=\"color:#F97583\"> new</span><span style=\"color:#79B8FF\"> WP_Query</span><span style=\"color:#E1E4E8\">($args);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\tif</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\twhile</span><span style=\"color:#E1E4E8\"> ($posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">have_posts</span><span style=\"color:#E1E4E8\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$posts</span><span style=\"color:#F97583\">-></span><span style=\"color:#B392F0\">the_post</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$weekly_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> get_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'weekly_views'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">true</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">\t\t\tif</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#F97583\">!</span><span style=\"color:#79B8FF\">is_array</span><span style=\"color:#E1E4E8\">($weekly_views)) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t\t$weekly_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t\t$total_weekly_views </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array_sum</span><span style=\"color:#E1E4E8\">($weekly_views);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\t\t\tupdate_post_meta</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#B392F0\">get_the_ID</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'total_weekly_views'</span><span style=\"color:#E1E4E8\">, $total_weekly_views);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">\t}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_reset_postdata</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">if</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#F97583\">!</span><span style=\"color:#B392F0\">wp_next_scheduled</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'total_weekly_views_hook'</span><span style=\"color:#E1E4E8\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">\twp_schedule_event</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">time</span><span style=\"color:#E1E4E8\">(), </span><span style=\"color:#9ECBFF\">'daily'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'total_weekly_views_hook'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">add_action</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'total_weekly_views_hook'</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">'total_weekly_views'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"5-query-posts-by-weekly-views\">5. Query Posts by Weekly Views</h2>\n<p>Now that we have the <code>total_weekly_views</code> custom field, we can query the posts by weekly views. We will create a new file called <code>most-viewed.php</code> to query the posts by weekly views.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"><span style=\"color:#F97583\">&#x3C;?</span><span style=\"color:#79B8FF\">php</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">$args </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> array</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">  'post_type'</span><span style=\"color:#F97583\">      =></span><span style=\"color:#9ECBFF\"> 'post'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">  'posts_per_page'</span><span style=\"color:#F97583\"> =></span><span style=\"color:#79B8FF\"> 5</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">  'meta_key'</span><span style=\"color:#F97583\">       =></span><span style=\"color:#9ECBFF\"> 'total_weekly_views'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">  'orderby'</span><span style=\"color:#F97583\">        =></span><span style=\"color:#9ECBFF\"> 'meta_value_num'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">  'order'</span><span style=\"color:#F97583\">          =></span><span style=\"color:#9ECBFF\"> 'DESC'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">$query </span><span style=\"color:#F97583\">=</span><span style=\"color:#F97583\"> new</span><span style=\"color:#79B8FF\"> WP_Query</span><span style=\"color:#E1E4E8\">($args);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">?></span></span>\n<span class=\"line\"></span></code></pre>\n<p>This code will return the <code>$query</code> we can use to loop through the posts.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\"><code><span class=\"line\"><span style=\"color:#F97583\">&#x3C;?</span><span style=\"color:#79B8FF\">php</span><span style=\"color:#F97583\"> require_once</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'most-viewed.php'</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#F97583\">?></span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// This returns the $query we can use to loop through the posts</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">...</span><span style=\"color:#79B8FF\">Filter</span><span style=\"color:#79B8FF\"> the</span><span style=\"color:#79B8FF\"> loop</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"how-to-test-the-cron-events\">How To Test The CRON Events</h2>\n<p>To test the CRON events you can use the <a href=\"https://wordpress.org/plugins/wp-crontrol/\">WP Crontrol</a> plugin. This plugin allows you to view and control what’s happening in the WP-Cron system.</p>\n<p>Then you can simulate the CRON events by clicking on the “Run Now” button.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>There are of course many ways to achieve this. This is just one of them. You can use this as a base and improve it according to your needs.</p>\n<p>Hope this helps you to filter posts by weekly views in WordPress without external plugins.</p>";

				const frontmatter = {"title":"Add New Custom Field and Query by Weekly Views in WordPress","summary":"How can I filter posts by weekly views in WordPress? In this article, we will show you how to add a new custom field to your WordPress posts and query them by the total views of the week.","pubDate":"2024-07-08T00:00:00.000Z","emoji":"💻","author":"Raul Cano","linkAuthor":"https://x.com/raulcanodev","image":"/thumbnails/wordpress.webp","tags":["wordpress","php"],"slug":"wordpress-custom-field-to-query-by-weekly-views","category":"WordPress"};
				const file = "/Users/rawraul/Dev/raul-cano/portfolio-2024/src/content/blog/wordpress-custom-field-to-query-by-weekly-views.md";
				const url = undefined;
				function rawContent() {
					return "WordPress allows you to create new meta_keys for your posts. This is useful when\r\nyou want to store additional information about your posts. \r\n\r\nBy the other hand the [WordPress CRON event](https://developer.wordpress.org/plugins/cron/scheduling-wp-cron-events/) allows you to schedule events to run at specific times. In this case, we will use it to reset the daily views counter every day, store the daily views in a weekly array, and calculate the total weekly views.\r\n\r\n---\r\n\r\n## 1. Add a New Custom Field to Store Daily Views\r\n\r\nWe can add a new custom field in different ways. Without code by using the plugin ACF (Advanced Custom Fields) or with code. In this case, we will use code.\r\n\r\nTo add a new custom field, WordPress provides the [add_post_meta()](https://developer.wordpress.org/reference/functions/add_post_meta/) and [update_post_meta()](https://developer.wordpress.org/reference/functions/update_post_meta/) functions. It's not necessary to use the first one because update_post_meta() will add the custom field if it doesn't exist.\r\n\r\n### Code for `single.php`\r\n\r\n```php title=\"single.php\"\r\n<?php while (have_posts()) : the_post(); ?>\r\n\r\n  <?php\r\n  // Get the post ID and increment the daily views counter\r\n  $post_id = get_the_ID(); // Get the post ID from the loop \r\n  $daily_views = get_post_meta($post_id, 'daily_views', true);\r\n  $daily_views = $daily_views ? $daily_views + 1 : 1;\r\n\r\n  update_post_meta($post_id, 'daily_views', $daily_views);\r\n  ?>\r\n\r\n  ...Your post content\r\n\r\n<?php endwhile; ?>\r\n```\r\n\r\nBy doing so, we can see in the database that the custom field `daily_views` has been added to the post. Inside the postmeta table\r\n\r\n\r\n## 2. Create CRON event to reset the daily views counter every day\r\n\r\nTo reset the daily views counter every day, we can use the WordPress CRON event. We will create a new function in `functions.php` to reset the daily views counter for all posts.\r\n\r\n### Code for `functions.php`\r\n\r\n```php title=\"most-viewed.php\"\r\nfunction reset_daily_views()\r\n{\r\n\t$args = array(\r\n\t\t'post_type'      => 'post',\r\n\t\t'posts_per_page' => -1,\r\n\t\t'post_status'    => 'publish',\r\n\t);\r\n\r\n\t$posts = new WP_Query($args);\r\n\r\n\tif ($posts->have_posts()) {\r\n\t\twhile ($posts->have_posts()) {\r\n\t\t\t$posts->the_post();\r\n\t\t\tdelete_post_meta(get_the_ID(), 'daily_views'); // Delete the daily views counter\r\n\t\t}\r\n\t}\r\n\twp_reset_postdata();\r\n}\r\n\r\nif (!wp_next_scheduled('reset_daily_views_hook')) {\r\n\twp_schedule_event(time(), 'daily', 'reset_daily_views_hook');\r\n}\r\n\r\nadd_action('reset_daily_views_hook', 'reset_daily_views');\r\n```\r\n\r\n## 3. Add a New Custom Field to Store Weekly Views With a CRON Event\r\n\r\nWe will create a new function in `functions.php` to store the daily views in a weekly array. This function will be executed every day to store the daily views in the `weekly_views` custom field.\r\n\r\n```php title=\"functions.php\"\r\nfunction add_day_to_week()\r\n{\r\n\t$args = array(\r\n\t\t'post_type'      => 'post',\r\n\t\t'posts_per_page' => -1,\r\n\t\t'post_status'    => 'publish',\r\n\t);\r\n\r\n\t$posts = new WP_Query($args);\r\n\r\n\tif ($posts->have_posts()) {\r\n\t\twhile ($posts->have_posts()) {\r\n\t\t\t$posts->the_post();\r\n\r\n\t\t\t$daily_views = get_post_meta(get_the_ID(), 'daily_views', true);  // Comes from single.php\r\n\t\t\t$weekly_views = get_post_meta(get_the_ID(), 'weekly_views', true);\r\n\r\n\t\t\tif (!is_array($weekly_views)) {\r\n\t\t\t\t$weekly_views = array();\r\n\t\t\t}\r\n\r\n\t\t\tif (count($weekly_views) >= 7) {\r\n\t\t\t\tarray_shift($weekly_views);\r\n\t\t\t}\r\n\r\n\t\t\t$weekly_views[] = $daily_views;\r\n\r\n\t\t\tupdate_post_meta(get_the_ID(), 'weekly_views', $weekly_views);\r\n\t\t}\r\n\t}\r\n\twp_reset_postdata();\r\n}\r\n\r\nif (!wp_next_scheduled('add_day_to_week_hook')) {\r\n\twp_schedule_event(time(), 'daily', 'add_day_to_week_hook');\r\n}\r\n\r\nadd_action('add_day_to_week_hook', 'add_day_to_week');\r\n```\r\n\r\n## 4. Add a New Custom Field to Store The Total Views During The Week\r\n\r\nThis is a simple sum of the `weekly_views` array. We will create a new function in `functions.php` to store the total weekly views for all posts.\r\n\r\n```php title=\"functions.php\"\r\n\r\nfunction total_weekly_views()\r\n{\r\n\t$args = array(\r\n\t\t'post_type'      => 'post',\r\n\t\t'posts_per_page' => -1,\r\n\t\t'post_status'    => 'publish',\r\n\t);\r\n\r\n\t$posts = new WP_Query($args);\r\n\r\n\tif ($posts->have_posts()) {\r\n\t\twhile ($posts->have_posts()) {\r\n\t\t\t$posts->the_post();\r\n\r\n\t\t\t$weekly_views = get_post_meta(get_the_ID(), 'weekly_views', true);\r\n\r\n\t\t\tif (!is_array($weekly_views)) {\r\n\t\t\t\t$weekly_views = array();\r\n\t\t\t}\r\n\r\n\t\t\t$total_weekly_views = array_sum($weekly_views);\r\n\r\n\t\t\tupdate_post_meta(get_the_ID(), 'total_weekly_views', $total_weekly_views);\r\n\t\t}\r\n\t}\r\n\twp_reset_postdata();\r\n}\r\n\r\nif (!wp_next_scheduled('total_weekly_views_hook')) {\r\n\twp_schedule_event(time(), 'daily', 'total_weekly_views_hook');\r\n}\r\n\r\nadd_action('total_weekly_views_hook', 'total_weekly_views');\r\n```\r\n\r\n## 5. Query Posts by Weekly Views\r\n\r\nNow that we have the `total_weekly_views` custom field, we can query the posts by weekly views. We will create a new file called `most-viewed.php` to query the posts by weekly views.\r\n\r\n```php title=\"most-viewed.php\"\r\n<?php\r\n$args = array(\r\n  'post_type'      => 'post',\r\n  'posts_per_page' => 5,\r\n  'meta_key'       => 'total_weekly_views',\r\n  'orderby'        => 'meta_value_num',\r\n  'order'          => 'DESC',\r\n);\r\n\r\n$query = new WP_Query($args);\r\n?>\r\n```\r\n\r\nThis code will return the `$query` we can use to loop through the posts.\r\n\r\n```php title=\"index.php\"\r\n<?php require_once('most-viewed.php'); ?>\r\n// This returns the $query we can use to loop through the posts\r\n...Filter the loop\r\n```\r\n\r\n## How To Test The CRON Events\r\nTo test the CRON events you can use the [WP Crontrol](https://wordpress.org/plugins/wp-crontrol/) plugin. This plugin allows you to view and control what's happening in the WP-Cron system.\r\n\r\nThen you can simulate the CRON events by clicking on the \"Run Now\" button.\r\n\r\n## Conclusion\r\n\r\nThere are of course many ways to achieve this. This is just one of them. You can use this as a base and improve it according to your needs. \r\n\r\nHope this helps you to filter posts by weekly views in WordPress without external plugins.\r\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"1-add-a-new-custom-field-to-store-daily-views","text":"1. Add a New Custom Field to Store Daily Views"},{"depth":3,"slug":"code-for-singlephp","text":"Code for single.php"},{"depth":2,"slug":"2-create-cron-event-to-reset-the-daily-views-counter-every-day","text":"2. Create CRON event to reset the daily views counter every day"},{"depth":3,"slug":"code-for-functionsphp","text":"Code for functions.php"},{"depth":2,"slug":"3-add-a-new-custom-field-to-store-weekly-views-with-a-cron-event","text":"3. Add a New Custom Field to Store Weekly Views With a CRON Event"},{"depth":2,"slug":"4-add-a-new-custom-field-to-store-the-total-views-during-the-week","text":"4. Add a New Custom Field to Store The Total Views During The Week"},{"depth":2,"slug":"5-query-posts-by-weekly-views","text":"5. Query Posts by Weekly Views"},{"depth":2,"slug":"how-to-test-the-cron-events","text":"How To Test The CRON Events"},{"depth":2,"slug":"conclusion","text":"Conclusion"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
